#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Mon Apr 15 18:56:47 2019
#

import threading
import time
import sys
import datetime

import wx
import wx.adv

# begin wxGlade: dependencies
import bms
# end wxGlade

# begin wxGlade: extracode
class EventHandler(threading.Thread):
    def __init__(self, parent, event_id, city, pref_venues, movie, date):
        threading.Thread.__init__(self)
        self._parent = parent
        self.event_id = event_id
        self.quit = False
        self.city_id = city
        self.city = self._parent.choice_1.GetString(self.city_id)
        self.pref_venues = list(filter(None, [venue.strip() for venue in pref_venues.upper().split(',')]))
        self.movie = movie
        self.date_ob = date
        self.event = bms.Event(self.city, self.pref_venues, self.movie, self.date_ob.Format('%Y%m%d'))
        self.viewer = event_wx(self, self.event, self.city_id, self.pref_venues, self.movie, self.date_ob, None, wx.ID_ANY, "",
                               style = wx.MINIMIZE_BOX | wx.MAXIMIZE_BOX | wx.RESIZE_BORDER | wx.SYSTEM_MENU | wx.CAPTION | wx.CLOSE_BOX | wx.CLIP_CHILDREN | wx.FULL_REPAINT_ON_RESIZE)

    def run(self):
        try:
            self.check()
            self.quit = True
            for i in range(self._parent.list_ctrl_1.GetItemCount()):
                if int(self._parent.list_ctrl_1.GetItem(i).GetText()) == self.event_id:
                    self._parent.list_ctrl_1.DeleteItem(i)
                    break
        except RuntimeError: pass

    def check(self):
        self.viewer.Show(True)
        try: self.event.config()
        except Exception as ex:
            self.viewer.set_status('Configuration Error', '#c64343')
            wx.MessageBox('Error: {}'.format(str(ex)), 'Config Error - BMS ATC', wx.OK | wx.ICON_ERROR)
            return

        self.viewer.config()
        self.viewer.button_2.Enable(True)

        while True:
            self.viewer.set_status('Status: Running', '#5f9f9f')
            try:
                self.event.get_shows()
            except Exception as ex:
                self.viewer.set_status('Error: {}'.format(str(ex)), '#c64343')

            if not self.event.tickets_available():
                for _ in range(5*4*60):
                    if self.quit:
                        return
                    time.sleep(.25)
            else: break

        self.viewer.button_2.Enable(False)
        self.viewer.set_status('TICKETS AVAILABLE!', '#00d86c')

        pref = False if len(self.pref_venues) > 0 else True
        for venue_id in self.event.shows.keys():
            pref = pref or venue_id in self.pref_venues
        if pref: self.event.send_push()

        wx.MessageBox('{} available in {} on {}! BOOK NOW!'.format(self.event.title, self.city, self.date_ob.Format('%d/%m/%Y')), 'AVAILABLE - BMS ATC', wx.OK | wx.ICON_INFORMATION)

# end wxGlade


class main_wx(wx.Frame):
    def __init__(self, *args, **kwds):
        self.event_handlers = []

        # begin wxGlade: main_wx.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((450, 273))
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_1_Start = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.choice_1 = wx.Choice(self.notebook_1_Start, wx.ID_ANY, choices=bms.Event.get_cities())
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_1_Start, wx.ID_ANY, "")
        self.text_ctrl_1 = wx.TextCtrl(self.notebook_1_Start, wx.ID_ANY, "")
        self.datepicker_ctrl_1 = wx.adv.DatePickerCtrl(self.notebook_1_Start, wx.ID_ANY, style=wx.adv.DP_DEFAULT | wx.adv.DP_DROPDOWN | wx.adv.DP_SHOWCENTURY)
        self.button_quit = wx.Button(self.notebook_1_Start, wx.ID_EXIT, "")
        self.button_check = wx.Button(self.notebook_1_Start, wx.ID_ANY, "Check Tickets")
        self.notebook_1_Running = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.list_ctrl_1 = wx.ListCtrl(self.notebook_1_Running, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_SINGLE_SEL | wx.LC_VRULES)
        self.notebook_1_About = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.hyperlink_1 = wx.adv.HyperlinkCtrl(self.notebook_1_About, wx.ID_ANY, "https://github.com/sayakbrm/BMSAutoTicketBooker", "https://github.com/sayakbrm/BMSAutoTicketBooker", style=wx.adv.HL_ALIGN_CENTRE)

        self.__set_properties()
        self.__do_layout()
        self.SetSizeHints(self.GetSize().x, self.GetSize().y,self.GetSize().x, self.GetSize().y)

        self.Bind(wx.EVT_BUTTON, self.handle_quit, self.button_quit)
        self.Bind(wx.EVT_BUTTON, self.handle_check, self.button_check)
        self.Bind(wx.EVT_LIST_ITEM_ACTIVATED, self.handle_event, self.list_ctrl_1)
        self.Bind(wx.EVT_CLOSE, self.handle_quit, self)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: main_wx.__set_properties
        self.SetTitle("BMS AutoTicketChecker")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap(bms.cd + "/res/icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.button_quit.SetBitmap(wx.Bitmap(bms.cd + "/res/error_small.png", wx.BITMAP_TYPE_ANY))
        self.button_check.SetBitmap(wx.Bitmap(bms.cd + "/res/check_small.png", wx.BITMAP_TYPE_ANY))
        self.list_ctrl_1.AppendColumn("", format=wx.LIST_FORMAT_LEFT, width=0)
        self.list_ctrl_1.AppendColumn("City", format=wx.LIST_FORMAT_LEFT, width=100)
        self.list_ctrl_1.AppendColumn("Pref. Venues", format=wx.LIST_FORMAT_LEFT, width=100)
        self.list_ctrl_1.AppendColumn("Movie", format=wx.LIST_FORMAT_LEFT, width=100)
        self.list_ctrl_1.AppendColumn("Date", format=wx.LIST_FORMAT_LEFT, width=100)
        self.hyperlink_1.SetFont(wx.Font(8, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_LIGHT, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: main_wx.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridBagSizer(10, 10)
        label_city = wx.StaticText(self.notebook_1_Start, wx.ID_ANY, "City")
        grid_sizer_1.Add(label_city, (0, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.choice_1, (0, 1), (1, 1), wx.EXPAND, 0)
        label_venues = wx.StaticText(self.notebook_1_Start, wx.ID_ANY, "Pref. Venues")
        grid_sizer_1.Add(label_venues, (1, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_2, (1, 1), (1, 1), wx.EXPAND, 0)
        label_movie = wx.StaticText(self.notebook_1_Start, wx.ID_ANY, "Search Movie")
        grid_sizer_1.Add(label_movie, (2, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_1, (2, 1), (1, 1), wx.EXPAND, 0)
        label_date = wx.StaticText(self.notebook_1_Start, wx.ID_ANY, "Date")
        grid_sizer_1.Add(label_date, (3, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.datepicker_ctrl_1, (3, 1), (1, 1), wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_quit, (4, 0), (1, 1), wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_check, (4, 1), (1, 1), wx.EXPAND, 0)
        grid_sizer_1.AddGrowableCol(1)
        sizer_2.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 2)
        self.notebook_1_Start.SetSizer(sizer_2)
        sizer_3.Add(self.list_ctrl_1, 1, wx.ALL | wx.EXPAND, 0)
        self.notebook_1_Running.SetSizer(sizer_3)
        bitmap_1 = wx.StaticBitmap(self.notebook_1_About, wx.ID_ANY, wx.Bitmap(bms.cd + "/res/about.png", wx.BITMAP_TYPE_ANY))
        bitmap_1.SetMinSize((84, 84))
        sizer_5.Add(bitmap_1, 0, wx.ALIGN_CENTER | wx.TOP, 13)
        label_title = wx.StaticText(self.notebook_1_About, wx.ID_ANY, "BMS AutoTicketChecker")
        label_title.SetFont(wx.Font(10, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        sizer_5.Add(label_title, 0, wx.ALIGN_CENTER, 0)
        label_author = wx.StaticText(self.notebook_1_About, wx.ID_ANY, "Version: 0.3.2", style=wx.ALIGN_CENTER)
        label_author.SetFont(wx.Font(9, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_LIGHT, 0, ""))
        sizer_5.Add(label_author, 0, wx.ALIGN_CENTER, 0)
        label_5 = wx.StaticText(self.notebook_1_About, wx.ID_ANY, "Author: @sayakbrm (GitHub)")
        label_5.SetFont(wx.Font(9, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_LIGHT, 0, ""))
        sizer_5.Add(label_5, 0, wx.ALIGN_CENTER, 0)
        sizer_5.Add(self.hyperlink_1, 0, wx.ALIGN_CENTER, 0)
        sizer_4.Add(sizer_5, 1, wx.EXPAND, 0)
        self.notebook_1_About.SetSizer(sizer_4)
        self.notebook_1.AddPage(self.notebook_1_Start, "Start")
        self.notebook_1.AddPage(self.notebook_1_Running, "Movies")
        self.notebook_1.AddPage(self.notebook_1_About, "About")
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def handle_quit(self, event):  # wxGlade: main_wx.<event_handler>
        for event_handler in self.event_handlers:
            event_handler.quit = True
            try: event_handler.viewer.Destroy()
            except RuntimeError: pass
        time.sleep(.5)
        event.Skip()
        self.Destroy()

    def handle_check(self, event):  # wxGlade: main_wx.<event_handler>
        city = self.choice_1.GetSelection()
        pref_venues = self.text_ctrl_2.GetLineText(0)
        movie = self.text_ctrl_1.GetLineText(0)
        date = self.datepicker_ctrl_1.GetValue()
        ev_id = self.list_ctrl_1.Append([len(self.event_handlers), self.choice_1.GetString(city), pref_venues, movie, date.Format('%Y%m%d')])
        ev = EventHandler(self, len(self.event_handlers), city, pref_venues, movie, date)
        ev.start()
        self.event_handlers.append(ev)
        event.Skip()

    def handle_event(self, event):  # wxGlade: main_wx.<event_handler>
        self.event_handlers[int(self.list_ctrl_1.GetItemText(event.GetIndex()))].viewer.Show(True)
        event.Skip()

# end of class main_wx

class event_wx(wx.Frame):
    def __init__(self, parent, event, city_id, pref_venues, movie, date, *args, **kwds):
        self.event = event
        self.channel = ''
        self.url = ''
        self._parent = parent
        self.city_id = city_id
        self.pref_venues = ','.join(pref_venues) if len(pref_venues) > 0 else ''
        self.movie = movie
        self.date = date

        # begin wxGlade: event_wx.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((450, 282))
        self.SetSizeHints(450, 282, 450, 282)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.choice_city = wx.Choice(self.panel_1, wx.ID_ANY, choices=bms.Event.get_cities())
        self.text_ctrl_venues = wx.TextCtrl(self.panel_1, wx.ID_ANY, self.pref_venues)
        self.text_ctrl_movie = wx.TextCtrl(self.panel_1, wx.ID_ANY, self.movie)
        self.datepicker_ctrl_2 = wx.adv.DatePickerCtrl(self.panel_1, wx.ID_ANY, style=wx.adv.DP_DEFAULT | wx.adv.DP_DROPDOWN | wx.adv.DP_SHOWCENTURY)
        self.button_2 = wx.Button(self.panel_1, wx.ID_STOP, "")
        self.hyperlink_3 = wx.adv.HyperlinkCtrl(self.panel_1, wx.ID_ANY, "BUY NOW", "")
        self.hyperlink_2 = wx.adv.HyperlinkCtrl(self.panel_1, wx.ID_ANY, "Subscribe to Notifications", "", style=wx.adv.HL_ALIGN_CENTRE)

        self.city = self.choice_city.GetString(self.city_id)

        self.__set_properties()
        self.__do_layout()
        self.SetSizeHints(450, 282, 450, 282)

        self.Bind(wx.EVT_BUTTON, self.handle_stop, self.button_2)
        self.Bind(wx.EVT_CLOSE, self.handle_close, self)
        # end wxGlade

        self.set_status('Status: Not Configured', '#7f7f7f')
        self.choice_city.SetSelection(self.city_id)
        self.datepicker_ctrl_2.SetValue(self.date)

    def config(self):
        self.channel = self.event.get_channel()
        self.url = self.event.url
        self.hyperlink_2.SetURL(self.channel)
        self.hyperlink_2.SetLabel('Subscribe: {}'.format(self.channel))
        self.hyperlink_3.SetURL(self.url)
        self.set_status('Status: Configured', '#999932')
        self.hyperlink_3.Show()
        self.hyperlink_2.Show()
        self.SetSizeHints(450, 317, 450, 317)
        self.SetSize((450, 317))

    def set_status(self, msg, col):
        self.label_8.SetLabel(msg)
        get_rgb = lambda h: tuple(int(h.lstrip('#')[i:i+2], 16) for i in (0, 2, 4))
        self.label_8.SetBackgroundColour(wx.Colour(*get_rgb(col)))

    def __set_properties(self):
        # begin wxGlade: event_wx.__set_properties
        self.SetTitle("{}-{} - BMS ATC".format(self.city, self.movie))
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap(bms.cd + "/res/icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.choice_city.Enable(False)
        self.choice_city.SetSelection(0)
        self.text_ctrl_venues.Enable(False)
        self.text_ctrl_movie.Enable(False)
        self.datepicker_ctrl_2.Enable(False)
        self.button_2.SetBitmap(wx.Bitmap(bms.cd + "/res/error_small.png", wx.BITMAP_TYPE_ANY))
        self.button_2.Enable(False)
        self.hyperlink_3.Hide()
        self.hyperlink_2.Hide()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: event_wx.__do_layout
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_3 = wx.GridBagSizer(10, 10)
        self.label_8 = wx.StaticText(self.panel_1, wx.ID_ANY, "", style=wx.ALIGN_CENTER)
        self.label_8.SetForegroundColour(wx.Colour(255, 255, 255))
        self.label_8.SetFont(wx.Font(10, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_3.Add(self.label_8, (0, 0), (1, 2), wx.ALIGN_CENTER | wx.ALL | wx.EXPAND, 2)
        label_9 = wx.StaticText(self.panel_1, wx.ID_ANY, "City")
        grid_sizer_3.Add(label_9, (1, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.choice_city, (1, 1), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_10 = wx.StaticText(self.panel_1, wx.ID_ANY, "Pref. Venues")
        grid_sizer_3.Add(label_10, (2, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.text_ctrl_venues, (2, 1), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_11 = wx.StaticText(self.panel_1, wx.ID_ANY, "Search Movie")
        grid_sizer_3.Add(label_11, (3, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.text_ctrl_movie, (3, 1), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        label_12 = wx.StaticText(self.panel_1, wx.ID_ANY, "Date")
        grid_sizer_3.Add(label_12, (4, 0), (1, 1), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.datepicker_ctrl_2, (4, 1), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        grid_sizer_3.Add(self.button_2, (5, 0), (1, 2), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
        grid_sizer_3.Add(self.hyperlink_3, (6, 0), (1, 1), 0, 0)
        grid_sizer_3.Add(self.hyperlink_2, (6, 1), (1, 1), wx.ALIGN_CENTER, 0)
        grid_sizer_3.AddGrowableCol(1)
        sizer_10.Add(grid_sizer_3, 1, wx.ALL | wx.EXPAND, 5)
        self.panel_1.SetSizer(sizer_10)
        sizer_9.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_9)
        self.Layout()
        # end wxGlade

    def handle_stop(self, event):  # wxGlade: event_wx.<event_handler>
        self._parent.quit = True
        self.button_2.Enable(False)
        self.set_status('Status: Stopped', '#999932')
        event.Skip()

    def handle_close(self, event):  # wxGlade: event_wx.<event_handler>
        self.Show(False)
        if self._parent.quit == True:
            event.Skip()
            self.Destroy()

# end of class event_wx

class AutoTicketChecker(wx.App):
    def OnInit(self):
        self.locale = wx.Locale(wx.LANGUAGE_ENGLISH)
        self.frame = main_wx(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class AutoTicketChecker

if __name__ == "__main__":
    app = AutoTicketChecker(0)
    app.MainLoop()
